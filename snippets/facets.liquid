{%- comment -%}
----------------------------------------------------------------------------------------------------------------------
FACETING
----------------------------------------------------------------------------------------------------------------------

Display the facets for a given resource.

********************************************
Supported variables
********************************************

* results: either collection or search drop to extract the filters from
* show_filters: a boolean indicating if the filters should show or not (this is useful if merchants want only to show
                the quick links without filters, for instance)
* open_filters_by_default: if set to true, all the collapsible filters are automatically open
* update_on_change: if set to true the results will reload as soon as an option is changed
* quick_links_menu: an optional menu that will show fixed links
* context: an optional context to generate unique ID if facets are outputted several times
{%- endcomment -%}

{%- assign color_label_list = 'general.label.color' | t | replace: ', ', ',' | downcase | split: ',' -%}
{%- capture id_prefix -%}facets-{{ context }}{%- endcapture -%}

<facets-form {% if update_on_change %}update-on-change{% endif %} section-id="{{ section.id }}">
  <form method="GET" action="{{ request.path }}" class="facets">
    {%- comment -%}We always reset to the first page so that when criteria change, the page is restored to the first one{%- endcomment -%}
    <input type="hidden" name="page" value="">

    {%- if results.current_type != blank or results.current_vendor != blank -%}
      <input type="hidden" name="q" value="{{ results.current_vendor | default: results.current_type | escape }}">
    {%- endif -%}

    {%- if results.sort_by != blank -%}
      <input type="hidden" name="sort_by" value="{{ results.sort_by }}">
    {%- endif -%}

    {%- if request.page_type == 'search' -%}
      <input type="hidden" name="q" value="{{ results.terms | escape }}">
    {%- endif -%}

    <div class="accordion-list">
      {%- if quick_links_menu.links.size > 0 -%}
        {%- capture filter_content -%}
          <div class="v-stack gap-2.5">
            {%- for link in quick_links_menu.links -%}
              <a href="{{ link.url }}" {% unless link.active %}class="link-faded"{% endunless %}>{{ link.title }}</a>
            {%- endfor -%}
          </div>
        {%- endcapture -%}

        {%- render 'accordion', title: quick_links_menu.title, content: filter_content, open: open_filters_by_default, show_arrow: true -%}
      {%- endif -%}

      {%- if show_filters -%}
        {%- if section.settings.variant_collection and section.settings.color_filter_mode == 'client_side' -%}
          {%- capture filter_content -%}
            <div class="collection-color-buttons" id="drawer-color-filter-buttons">
              {% assign all_colors = '' %}
              
              {% comment %} Get all available colors from products in this collection {% endcomment %}
              {% for product in collection.products %}
                {% for option in product.options %}
                  {% if option == 'Color' or option == 'Farbe' %}
                    {% assign color_index = forloop.index0 %}
                    {% for variant in product.variants %}
                      {% if variant.available %}
                        {% assign color_value = variant.options[color_index] | strip %}
                        {% unless all_colors contains color_value %}
                          {% unless all_colors == '' %}
                            {% assign all_colors = all_colors | append: ',' %}
                          {% endunless %}
                          {% assign all_colors = all_colors | append: color_value %}
                        {% endunless %}
                      {% endif %}
                    {% endfor %}
                  {% endif %}
                {% endfor %}
              {% endfor %}
              
              {% assign all_colors_array = all_colors | split: ',' | sort %}
              
              {% comment %} Create a swatch for each color {% endcomment %}
              <div class="h-stack wrap gap-2">
                {% for color_value in all_colors_array %}
                  {% assign clean_color = color_value | strip | downcase %}
                  {% assign swatch_id = 'drawer-swatch-' | append: section.id | append: '-' | append: clean_color | handle %}
                  
                  {%- liquid
                    assign downcase_label = clean_color
                    assign white_label = 'general.label.white' | t | downcase
                    
                    # Default swatch style (fallback)
                    assign swatch_style = '--swatch-background: linear-gradient(to right, ' | append: downcase_label | append: ', ' | append: downcase_label | append: ')'
                    
                    # Parse the config (similar to option-value.liquid)
                    assign swatch_config = settings.color_swatch_config | newline_to_br | split: '<br />'

                    for swatch_item in swatch_config
                      assign swatch_parts = swatch_item | split: ':'
                      assign swatch_name = swatch_parts.first | downcase | strip

                      if downcase_label == swatch_name
                        assign swatch_value = swatch_parts.last | strip

                        if swatch_value contains '#'
                          assign swatch_style = '--swatch-background: linear-gradient(to right, ' | append: swatch_value | append: ', ' | append: swatch_value | append: ')'
                        elsif swatch_value contains 'linear-gradient('
                          assign swatch_style = '--swatch-background: ' | append: swatch_value
                        elsif images[swatch_value] != blank
                          assign swatch_image = images[swatch_value] | image_url: width: 72
                          assign swatch_style = '--swatch-background: url(' | append: swatch_image | append: ')'
                        endif

                        break
                      endif
                    endfor
                  %}
                  
                  <button 
                    type="button"
                    class="color-swatch drawer-color-swatch {% if settings.round_color_swatches %}rounded-full{% endif %} {% if white_label == downcase_label %}border{% endif %}"
                    id="{{ swatch_id }}"
                    style="{{ swatch_style }}"
                    data-color="{{ color_value | escape }}"
                    data-color-clean="{{ clean_color }}"
                    onclick="filterProductsByColor('{{ clean_color }}', this, true)"
                    title="{{ color_value | escape }}"
                    aria-label="{{ 'collections.filters.color_label' | t: color_name: color_value }}"
                  >
                    <span class="sr-only">{{ color_value }}</span>
                  </button>
                {% endfor %}
                
                {% comment %} Add "All Colors" button {% endcomment %}
                {% assign all_swatch_id = 'drawer-swatch-' | append: section.id | append: '-all' %}
                <button 
                  type="button"
                  class="color-swatch drawer-color-swatch {% if settings.round_color_swatches %}rounded-full{% endif %} is-selected"
                  id="{{ all_swatch_id }}"
                  style="--swatch-background: #ffffff"
                  data-color="all"
                  onclick="showAllColors(this, true)"
                  title="{{ 'collections.filters.show_all_colors' | t }}"
                  aria-label="{{ 'collections.filters.show_all_colors' | t }}"
                >
                  <span class="sr-only">{{ 'collections.filters.show_all_colors' | t }}</span>
                  <svg aria-hidden="true" focusable="false" class="icon" style="width: 60%; height: 60%;" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path fill-rule="evenodd" clip-rule="evenodd" d="M10 18a8 8 0 1 0 0-16 8 8 0 0 0 0 16Zm-1.1-6.56 2.75-2.75a.8.8 0 0 0-1.13-1.13L8.8 8.8 6.04 6.04a.8.8 0 0 0-1.13 1.13l2.75 2.75-2.75 2.75a.8.8 0 1 0 1.13 1.13l2.75-2.75 2.75 2.75a.8.8 0 1 0 1.13-1.13L11.18 11.4l2.75-2.75a.8.8 0 0 0-1.13-1.13L10 10.28l-1.1-1.12Z" fill="currentColor"></path></svg>
                </button>
              </div>
            </div>
          {%- endcapture -%}

          {%- render 'accordion', title: section.settings.color_filter_title | default: 'Filter by color', content: filter_content, open: open_filters_by_default, show_arrow: true -%}
        {%- endif -%}
        
        {%- for filter in results.filters -%}
          {%- capture filter_content -%}
            {%- if filter.type == 'boolean' or filter.param_name == 'filter.v.availability' -%}
              {%- if filter.param_name == 'filter.v.availability' -%}
                <div class="checkbox-control">
                  <input id="{{ id_prefix }}-{{ filter.param_name }}" type="checkbox" class="switch" name="{{ filter.param_name }}" value="1" {% if filter.active_values.size > 0 %}checked{% endif %}>
                  <label for="{{ id_prefix }}-{{ filter.param_name }}" class="text-subdued">{{- 'collection.faceting.in_stock_only' | t -}}</label>
                </div>
              {%- else -%}
                <div class="v-stack gap-2.5">
                  {%- for filter_value in filter.values -%}
                    {%- liquid
                      if section.settings.show_filter_values_count
                        assign label = filter_value.label | append: ' (' | append: filter_value.count | append: ')'
                      else
                        assign label = filter_value.label
                      endif
                    -%}

                    <div class="checkbox-control">
                      {%- capture boolean_index -%}{% increment filter_boolean %}{%- endcapture -%}

                      <input id="{{ id_prefix }}-{{ filter_value.param_name }}-{{ boolean_index }}" type="checkbox" class="switch" name="{{ filter_value.param_name }}" value="{{ filter_value.value }}" {% if filter_value.active %}checked{% endif %}>
                      <label for="{{ id_prefix }}-{{ filter_value.param_name }}-{{ boolean_index }}" class="text-subdued">{{ label }}</label>
                    </div>
                  {%- endfor -%}
                </div>
              {%- endif -%}
            {%- else -%}
              {%- assign downcase_label = filter.label | downcase -%}

              {%- case filter.type -%}
                {%- when 'list' -%}
                  {%- liquid
                    if filter.presentation == 'image'
                      assign wrapper_class_list = 'v-stack gap-2'
                    elsif filter.presentation == 'swatch' or color_label_list contains downcase_label
                      assign wrapper_class_list = 'h-stack wrap gap-2'
                    else
                      assign wrapper_class_list = 'v-stack gap-2.5'
                    endif
                  -%}

                  <div class="{{ wrapper_class_list }}">
                    {% liquid
                      for filter_value in filter.values
                        assign value_id_prefix = id_prefix | append: '-' | append: forloop.index

                        if filter.presentation == 'image'
                          render 'option-value', type: 'image_filter', filter_value: filter_value, id_prefix: value_id_prefix
                        elsif filter.presentation == 'swatch' or color_label_list contains downcase_label
                          render 'option-value', type: 'swatch', filter_value: filter_value, show_tooltip: true, id_prefix: value_id_prefix
                        else
                          if section.settings.show_filter_values_count
                            assign label = filter_value.label | append: ' (' | append: filter_value.count | append: ')'
                          else
                            assign label = filter_value.label
                          endif

                          render 'checkbox', hide_checkbox: true, label: label, name: filter_value.param_name, value: filter_value.value, checked: filter_value.active, id_prefix: value_id_prefix
                        endif
                      endfor
                    %}
                  </div>

                {%- when 'price_range' -%}
                  {%- render 'price-range', filter: filter -%}
              {%- endcase -%}
            {%- endif -%}
          {%- endcapture -%}

          {%- if filter_content != blank -%}
            {%- render 'accordion', title: filter.label, content: filter_content, open: open_filters_by_default, show_arrow: true -%}
          {%- endif -%}
        {%- endfor -%}
      {%- endif -%}
    </div>

    <noscript style="display: block; margin-top: 20px;">
      {%- assign button_content = 'collection.faceting.apply_filters' | t -%}
      {%- render 'button', content: button_content, stretch: true -%}
    </noscript>
  </form>
</facets-form>